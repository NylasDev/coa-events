<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Events Calendar - Council of The Ancients</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&family=Exo+2:wght@300;400;600;700&display=swap');
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            background: linear-gradient(135deg, #0a0a0a 0%, #1a0f0a 25%, #2d1810 50%, #1a0f0a 75%, #0a0a0a 100%);
            min-height: 100vh;
            font-family: 'Exo 2', sans-serif;
            color: #e8dcc0;
            position: relative;
            overflow-x: hidden;
        }
        
        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: 
                radial-gradient(circle at 20% 80%, rgba(255, 140, 0, 0.05) 0%, transparent 50%),
                radial-gradient(circle at 80% 20%, rgba(255, 165, 0, 0.03) 0%, transparent 50%);
            pointer-events: none;
            z-index: 1;
        }
        
        .navbar {
            background: linear-gradient(135deg, rgba(26, 15, 10, 0.95), rgba(45, 24, 16, 0.9)) !important;
            backdrop-filter: blur(20px);
            border-bottom: 1px solid rgba(255, 140, 0, 0.2);
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5);
            position: relative;
            z-index: 10;
        }
        
        .navbar-brand {
            color: #ff8c00 !important;
            font-family: 'Orbitron', monospace;
            font-weight: 700;
            font-size: 1.5rem;
            text-shadow: 0 0 15px rgba(255, 140, 0, 0.4);
        }
        
        .navbar-nav .nav-link {
            color: #e8dcc0 !important;
            font-weight: 500;
            transition: all 0.3s ease;
            position: relative;
        }
        
        .navbar-nav .nav-link:hover {
            color: #ff8c00 !important;
            transform: translateY(-1px);
        }
        
        .navbar-nav .nav-link::after {
            content: '';
            position: absolute;
            width: 0;
            height: 2px;
            bottom: 0;
            left: 50%;
            background: linear-gradient(90deg, transparent, #ff8c00, transparent);
            transition: all 0.3s ease;
        }
        
        .navbar-nav .nav-link:hover::after {
            width: 100%;
            left: 0;
        }
        
        .container-fluid {
            position: relative;
            z-index: 2;
            padding-top: 2rem;
        }
        
        .card {
            background: linear-gradient(145deg, rgba(26, 15, 10, 0.9), rgba(45, 24, 16, 0.8));
            backdrop-filter: blur(15px);
            border: 1px solid rgba(255, 140, 0, 0.2);
            border-radius: 20px;
            color: #e8dcc0;
            box-shadow: 
                0 15px 35px rgba(0, 0, 0, 0.6),
                inset 0 1px 0 rgba(255, 140, 0, 0.1);
            position: relative;
            overflow: hidden;
        }
        
        .card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 1px;
            background: linear-gradient(90deg, transparent, #ff8c00, transparent);
            opacity: 0.6;
        }
        
        .card-header {
            background: linear-gradient(135deg, rgba(255, 140, 0, 0.1), rgba(255, 140, 0, 0.05));
            border-bottom: 1px solid rgba(255, 140, 0, 0.2);
            color: #ff8c00;
            font-family: 'Orbitron', monospace;
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: 1px;
        }
        
        .calendar {
            background: linear-gradient(145deg, rgba(26, 15, 10, 0.95), rgba(45, 24, 16, 0.9));
            border-radius: 20px;
            border: 1px solid rgba(255, 140, 0, 0.2);
            overflow: hidden;
            box-shadow: 
                0 20px 40px rgba(0, 0, 0, 0.7),
                inset 0 1px 0 rgba(255, 140, 0, 0.1);
        }
        
        .calendar-header {
            background: linear-gradient(135deg, rgba(255, 140, 0, 0.15), rgba(255, 140, 0, 0.1));
            padding: 1.5rem;
            text-align: center;
            border-bottom: 1px solid rgba(255, 140, 0, 0.2);
            position: relative;
        }
        
        .calendar-title {
            font-family: 'Orbitron', monospace;
            font-size: 1.8rem;
            font-weight: 700;
            color: #ff8c00;
            text-transform: uppercase;
            letter-spacing: 2px;
            text-shadow: 0 0 20px rgba(255, 140, 0, 0.4);
        }
        
        .calendar-nav {
            color: #e8dcc0;
            text-decoration: none;
            font-size: 1.5rem;
            margin: 0 2rem;
            transition: all 0.3s ease;
            padding: 0.5rem;
            border-radius: 8px;
        }
        
        .calendar-nav:hover {
            color: #ff8c00;
            background: rgba(255, 140, 0, 0.1);
            transform: scale(1.1);
        }
        
        .calendar-grid {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 1px;
            background: rgba(255, 140, 0, 0.1);
            padding: 1px;
        }
        
        .calendar-day-header {
            background: linear-gradient(135deg, rgba(255, 140, 0, 0.2), rgba(255, 140, 0, 0.1));
            padding: 1rem 0.5rem;
            text-align: center;
            font-weight: 700;
            font-family: 'Orbitron', monospace;
            color: #ff8c00;
            text-transform: uppercase;
            letter-spacing: 1px;
            font-size: 0.9rem;
        }
        
        .calendar-day {
            background: linear-gradient(145deg, rgba(26, 15, 10, 0.8), rgba(45, 24, 16, 0.7));
            min-height: 120px;
            padding: 0.8rem;
            position: relative;
            transition: all 0.3s ease;
            border: 1px solid rgba(255, 140, 0, 0.1);
            cursor: pointer;
        }
        
        .calendar-day:hover {
            background: linear-gradient(145deg, rgba(45, 24, 16, 0.9), rgba(26, 15, 10, 0.8));
            border-color: rgba(255, 140, 0, 0.3);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.4);
        }
        
        .calendar-day.other-month {
            background: linear-gradient(145deg, rgba(20, 15, 10, 0.4), rgba(30, 20, 15, 0.3));
            color: rgba(232, 220, 192, 0.4);
            border-color: rgba(255, 140, 0, 0.05);
        }
        
        .calendar-day.today {
            background: linear-gradient(145deg, rgba(255, 140, 0, 0.15), rgba(255, 140, 0, 0.1));
            border: 2px solid #ff8c00;
            box-shadow: 
                0 0 20px rgba(255, 140, 0, 0.3),
                inset 0 0 20px rgba(255, 140, 0, 0.1);
        }
        
        .day-number {
            font-weight: 700;
            font-size: 1.1rem;
            color: #e8dcc0;
            text-shadow: 0 1px 3px rgba(0, 0, 0, 0.5);
        }
        
        .calendar-day.today .day-number {
            color: #ff8c00;
            text-shadow: 0 0 10px rgba(255, 140, 0, 0.5);
        }
        
        .event-item {
            background: linear-gradient(135deg, rgba(255, 140, 0, 0.2), rgba(255, 140, 0, 0.1));
            border-radius: 8px;
            padding: 0.4rem 0.6rem;
            margin: 0.3rem 0;
            font-size: 0.75rem;
            border-left: 3px solid #ff8c00;
            cursor: pointer;
            transition: all 0.3s ease;
            backdrop-filter: blur(5px);
            border: 1px solid rgba(255, 140, 0, 0.2);
            color: #e8dcc0;
            font-weight: 500;
        }
        
        .event-item:hover {
            transform: translateX(3px) translateY(-1px);
            box-shadow: 0 4px 15px rgba(255, 140, 0, 0.3);
            background: linear-gradient(135deg, rgba(255, 140, 0, 0.3), rgba(255, 140, 0, 0.2));
            border-color: rgba(255, 140, 0, 0.4);
        }
        
        .event-spice-farming {
            border-left-color: #ff8c00;
        }
        
        .event-raiding-base {
            border-left-color: #ff6b47;
        }
        
        .event-ore-farming {
            border-left-color: #87ceeb;
        }
        
        .event-dd-extraction {
            border-left-color: #ffd700;
        }
        
        .event-ore-stravidium {
            border-left-color: #9370db;
        }
        
        .event-ore-titanium {
            border-left-color: #c0c0c0;
        }
        
        .btn-spice {
            background: linear-gradient(135deg, #ff8c00 0%, #ff7f00 50%, #e67300 100%);
            border: 2px solid #ff8c00;
            color: #000;
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(255, 140, 0, 0.3);
        }
        
        .btn-spice:hover {
            background: linear-gradient(135deg, #ffa500 0%, #ff8c00 50%, #ff7f00 100%);
            color: #000;
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(255, 140, 0, 0.4);
        }
        
        .alert {
            border-radius: 12px;
            border: 1px solid rgba(255, 140, 0, 0.2);
            background: linear-gradient(145deg, rgba(26, 15, 10, 0.9), rgba(45, 24, 16, 0.8));
            backdrop-filter: blur(10px);
            color: #e8dcc0;
        }
        
        .alert-success {
            border-color: rgba(40, 167, 69, 0.3);
            background: linear-gradient(145deg, rgba(0, 100, 0, 0.1), rgba(0, 80, 0, 0.05));
        }
        
        .alert-danger {
            border-color: rgba(220, 53, 69, 0.3);
            background: linear-gradient(145deg, rgba(139, 0, 0, 0.1), rgba(100, 0, 0, 0.05));
        }
        
        .modal-content {
            background: linear-gradient(145deg, rgba(26, 15, 10, 0.95), rgba(45, 24, 16, 0.9));
            border: 1px solid rgba(255, 140, 0, 0.3);
            color: #e8dcc0;
            border-radius: 20px;
            backdrop-filter: blur(20px);
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.8);
        }
        
        .modal-header {
            border-bottom: 1px solid rgba(255, 140, 0, 0.2);
            background: linear-gradient(135deg, rgba(255, 140, 0, 0.1), rgba(255, 140, 0, 0.05));
        }
        
        .modal-title {
            color: #ff8c00;
            font-family: 'Orbitron', monospace;
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: 1px;
        }
        
        .modal-footer {
            border-top: 1px solid rgba(255, 140, 0, 0.2);
            background: linear-gradient(135deg, rgba(255, 140, 0, 0.05), rgba(255, 140, 0, 0.02));
        }
        
        .signup-count {
            background: linear-gradient(135deg, #ff8c00, #ff7f00);
            color: #000;
            border-radius: 12px;
            padding: 0.2rem 0.5rem;
            font-size: 0.7rem;
            font-weight: 700;
            text-shadow: none;
            box-shadow: 0 2px 8px rgba(255, 140, 0, 0.3);
        }
        
        .spice-accent {
            color: #ff8c00;
            font-weight: 700;
            text-shadow: 0 0 10px rgba(255, 140, 0, 0.3);
        }
        
        .btn-outline-light {
            border-color: rgba(255, 140, 0, 0.5);
            color: #ff8c00;
            transition: all 0.3s ease;
        }
        
        .btn-outline-light:hover {
            background: linear-gradient(135deg, #ff8c00, #ff7f00);
            border-color: #ff8c00;
            color: #000;
            transform: translateY(-1px);
        }
        
        .dropdown-menu {
            background: linear-gradient(145deg, rgba(26, 15, 10, 0.95), rgba(45, 24, 16, 0.9));
            border: 1px solid rgba(255, 140, 0, 0.2);
            backdrop-filter: blur(15px);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.8);
        }
        
        .dropdown-item {
            color: #e8dcc0;
            transition: all 0.3s ease;
        }
        
        .dropdown-item:hover {
            background: rgba(255, 140, 0, 0.1);
            color: #ff8c00;
        }
        
        .badge {
            text-shadow: none;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark">
        <div class="container">
            <a class="navbar-brand fw-bold d-flex align-items-center" href="/">
                <img src="/images/logo/LOGO-32.webp" alt="COA Logo" style="width:40px;height:40px;object-fit:cover;border-radius:50%;filter:drop-shadow(0 0 8px #ff8c00cc);">
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link active" href="/dashboard">
                            <i class="bi bi-calendar3"></i> Events Calendar
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/events">
                            <i class="bi bi-list-task"></i> All Events
                        </a>
                    </li>
                    <% if (canManageEvents) { %>
                        <li class="nav-item">
                            <a class="nav-link" href="/events/create">
                                <i class="bi bi-plus-circle"></i> Create Event
                            </a>
                        </li>
                    <% } %>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown">
                            <i class="bi bi-person-circle"></i> <%= user.username %>
                            <% if (canManageEvents) { %>
                                <span class="badge bg-warning text-dark ms-1">Mentat</span>
                            <% } %>
                        </a>
                        <ul class="dropdown-menu">
                            <% if (canManageEvents) { %>
                                <li><h6 class="dropdown-header">
                                    <i class="bi bi-shield-check text-warning"></i> Mentat Powers
                                </h6></li>
                                <li><a class="dropdown-item" href="/events/create">
                                    <i class="bi bi-plus-circle text-success"></i> Forge Event
                                </a></li>
                                <li><a class="dropdown-item" href="/events">
                                    <i class="bi bi-gear text-primary"></i> Command Events
                                </a></li>
                                <li><hr class="dropdown-divider"></li>
                            <% } %>
                            <li>
                                <form id="logoutForm" action="/logout" method="POST" style="display: inline;">
                                    <button type="submit" class="dropdown-item">
                                        <i class="bi bi-box-arrow-right"></i> Return to Desert
                                    </button>
                                </form>
                            </li>
                        </ul>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <main class="container mt-4">
        <!-- Flash messages -->
        <% if (typeof messages !== 'undefined' && messages) { %>
            <% if (messages.error && messages.error.length > 0) { %>
                <% messages.error.forEach(function(error) { %>
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <i class="bi bi-exclamation-triangle"></i> <%= error %>
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                <% }); %>
            <% } %>
            <% if (messages.success && messages.success.length > 0) { %>
                <% messages.success.forEach(function(success) { %>
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        <i class="bi bi-check-circle"></i> <%= success %>
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                <% }); %>
            <% } %>
        <% } %>

        <!-- Welcome Header -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <div class="row align-items-center">
                            <div class="col-auto">
                                <% if (user.avatar) { %>
                                    <img src="https://cdn.discordapp.com/avatars/<%= user.id %>/<%= user.avatar %>.png?size=64" 
                                         alt="<%= user.username %>" class="rounded-circle border border-2" style="border-color: #ff8c00 !important; width: 60px; height: 60px; box-shadow: 0 0 20px rgba(255, 140, 0, 0.3);">
                                <% } else { %>
                                    <div class="rounded-circle d-flex align-items-center justify-content-center border border-2" 
                                         style="border-color: #ff8c00 !important; background: linear-gradient(135deg, #ff8c00, #ff7f00); width: 60px; height: 60px; box-shadow: 0 0 20px rgba(255, 140, 0, 0.3);">
                                        <i class="bi bi-person-fill" style="font-size: 1.5rem; color: #000;"></i>
                                    </div>
                                <% } %>
                            </div>
                            <div class="col">
                                <h2 class="mb-1" style="font-family: 'Orbitron', monospace; font-weight: 700;">
                                    The spice flows through <span class="spice-accent"><%= user.username %></span>
                                </h2>
                                <p class="mb-0" style="color: rgba(232, 220, 192, 0.8);">
                                    <i class="bi bi-shield-check me-1" style="color: #ff8c00;"></i>
                                    Awakened Guild Member
                                    <% if (canManageEvents) { %>
                                        <span class="ms-3">
                                            <i class="bi bi-star-fill" style="color: #ff8c00;"></i>
                                            <span class="spice-accent">Desert Commander</span>
                                        </span>
                                    <% } %>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Admin Panel (Only visible to event managers) -->
        <% if (canManageEvents) { %>
        <div class="container-fluid">
            <div class="row mb-4">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <h2 class="mb-0" style="font-family: 'Orbitron', monospace; font-weight: 900; letter-spacing: 2px;">
                                Guild Operations - Old Gods - Dune Awakening
                            </h2>
                        </div>
                        <div class="card-body">
                            <div class="row g-3">
                                <div class="col-md-4">
                                    <div class="d-grid">
                                        <a href="/events/create" class="btn btn-spice btn-lg">
                                            Forge New Event
                                        </a>
                                    </div>
                                    <small class="text-muted d-block mt-1 text-center">
                                        Create guild operations
                                    </small>
                                </div>
                                <div class="col-md-4">
                                    <div class="d-grid">
                                        <a href="/events" class="btn btn-outline-light btn-lg">
                                            Command Events
                                        </a>
                                    </div>
                                    <small class="text-muted d-block mt-1 text-center">
                                        Manage operations
                                    </small>
                                </div>
                                <div class="col-md-4">
                                    <div class="d-grid">
                                        <button class="btn btn-outline-light btn-lg" onclick="showEventStats()">
                                            Spice Analytics
                                        </button>
                                    </div>
                                    <small class="text-muted d-block mt-1 text-center">
                                        View harvest data
                                    </small>
                                </div>
                            </div>
                            <hr class="my-3" style="border-color: rgba(255, 140, 0, 0.3);">
                            <div class="row">
                                <div class="col-md-6">
                                    <h6 class="spice-accent">
                                        Command Status
                                    </h6>
                                    <p class="mb-1">
                                        <strong>Access Level:</strong>
                                        <% if (
                                            user.username.toLowerCase() === 'nylas' ||
                                            user.username.toLowerCase() === 'nylasdev' ||
                                            user.username.toLowerCase() === 'nylas_') { %>
                                            <span class="badge bg-danger">Supreme Bashar</span>
                                        <% } else if (
                                            user.rank && (user.rank.toLowerCase().includes('atreides') || user.rank.toLowerCase().includes('harkonnen'))) { %>
                                            <span class="badge bg-danger"><%= user.rank %></span>
                                        <% } else { %>
                                            <span class="badge bg-primary">Fedaykin</span>
                                        <% } %>
                                    </p>
                                    <p class="mb-0">
                                        <strong>Powers:</strong> Forge, Command, Banish Events
                                    </p>
                                </div>
                                <div class="col-md-6">
                                    <h6 class="spice-accent">
                                        Operations Summary
                                    </h6>
                                    <p class="mb-1">
                                        <strong>Total Operations:</strong> <span id="totalEvents">-</span>
                                    </p>
                                    <p class="mb-0">
                                        <strong>This Cycle:</strong> <span id="monthEvents">-</span>
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <% } %>

        <!-- Calendar -->
        <div class="row">
            <div class="col-12">
                <div class="calendar">
                    <div class="calendar-header">
                        <div class="d-flex justify-content-between align-items-center">
                            <a href="/dashboard?year=<%= currentYear %>&month=<%= currentMonth - 1 || 12 %>" class="calendar-nav">
                                <i class="bi bi-chevron-left"></i>
                            </a>
                            <h3 class="calendar-title mb-0">
                                <%= moment().month(currentMonth - 1).format('MMMM') %> <%= currentYear %>
                            </h3>
                            <a href="/dashboard?year=<%= currentYear %>&month=<%= currentMonth + 1 > 12 ? 1 : currentMonth + 1 %>" class="calendar-nav">
                                <i class="bi bi-chevron-right"></i>
                            </a>
                        </div>
                        <p class="mb-0 mt-2" style="color: rgba(232, 220, 192, 0.7); text-align: center; font-style: italic;">
                            The rhythm of Arrakis guides our operations
                        </p>
                    </div>
                    
                    <div class="calendar-grid">
                        <!-- Day headers -->
                        <div class="calendar-day-header">Sun</div>
                        <div class="calendar-day-header">Mon</div>
                        <div class="calendar-day-header">Tue</div>
                        <div class="calendar-day-header">Wed</div>
                        <div class="calendar-day-header">Thu</div>
                        <div class="calendar-day-header">Fri</div>
                        <div class="calendar-day-header">Sat</div>
                        
                        <!-- Calendar days -->
                        <%
                            const startOfMonth = moment.utc([currentYear, currentMonth - 1]).startOf('month');
                            const endOfMonth = moment.utc([currentYear, currentMonth - 1]).endOf('month');
                            const startOfCalendar = moment(startOfMonth).startOf('week');
                            const endOfCalendar = moment(endOfMonth).endOf('week');
                            const today = moment.utc().format('YYYY-MM-DD');
                            
                            let currentDay = moment(startOfCalendar);
                            while (currentDay.isSameOrBefore(endOfCalendar)) {
                                const dayKey = currentDay.format('YYYY-MM-DD');
                                const dayEvents = calendarData[dayKey] || [];
                                const isCurrentMonth = currentDay.month() === (currentMonth - 1);
                                const isToday = dayKey === today;
                        %>
                            <div class="calendar-day <%= !isCurrentMonth ? 'other-month' : '' %> <%= isToday ? 'today' : '' %>">
                                <div class="day-number"><%= currentDay.date() %></div>
                                <% dayEvents.forEach(function(event) { %>
                                    <div class="event-item event-<%= event.type %>" 
                                         data-bs-toggle="modal" 
                                         data-bs-target="#eventModal" 
                                         data-event-id="<%= event.id %>"
                                         onclick="loadEventDetails('<%= event.id %>')">
                                        <% if (event.eventTypeInfo.icon.startsWith('/')) { %>
                                            <img src="<%= event.eventTypeInfo.icon %>" alt="<%= event.eventTypeInfo.name %>" style="width: 16px; height: 16px; object-fit: contain; margin-right: 4px;">
                                        <% } else { %>
                                            <%= event.eventTypeInfo.icon %>
                                        <% } %>
                                        <%= event.title %>
                                        <% if (event.signupCount > 0) { %>
                                            <span class="signup-count"><%= event.signupCount %></span>
                                        <% } %>
                                    </div>
                                <% }); %>
                            </div>
                        <%
                                currentDay.add(1, 'day');
                            }
                        %>
                    </div>
                </div>
            </div>
        </div>

        <!-- Event Legend -->
        <div class="row mt-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title"><i class="bi bi-info-circle"></i> Event Types</h5>
                        <div class="row">
                            <% Object.values(eventTypes).forEach(function(eventType) { %>
                                <div class="col-md-4 mb-2">
                                    <% if (eventType.icon.startsWith('/')) { %>
                                        <img src="<%= eventType.icon %>" alt="<%= eventType.name %>" style="width: 24px; height: 24px; object-fit: contain;">
                                    <% } else { %>
                                        <span style="color: <%= eventType.color %>; font-size: 1.2rem;"><%= eventType.icon %></span>
                                    <% } %>
                                    <strong class="ms-2"><%= eventType.name %></strong>
                                    <br>
                                    <small class="ms-4"><%= eventType.description %></small>
                                </div>
                            <% }); %>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <!-- Event Modal -->
    <div class="modal fade" id="eventModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="eventModalTitle">Event Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body" id="eventModalBody">
                    Loading...
                </div>
                <div class="modal-footer" id="eventModalFooter">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <footer class="text-center py-4 mt-5" style="background: rgba(139, 69, 19, 0.9); border-top: 2px solid #D4A574;">
        <div class="container">
            <p>&copy; 2025 Council of The Ancients. Created by <strong>NylasDev</strong> - <a href="https://thevikingcompany.eu" class="spice-accent" target="_blank">The Viking Company</a></p>
        </div>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Function to generate Discord user avatar URL
        function getDiscordAvatarUrl(userId, avatar) {
            if (!avatar) {
                return 'https://cdn.discordapp.com/embed/avatars/0.png'; // Default Discord avatar
            }
            return `https://cdn.discordapp.com/avatars/${userId}/${avatar}.png?size=32`;
        }
        
        // Function to generate signups list with Discord avatars
        function generateSignupsList(signups) {
            if (!signups || signups.length === 0) {
                return '<p class="text-muted">No signups yet.</p>';
            }
            
            let signupsList = '<div class="signups-list" style="max-height: 200px; overflow-y: auto;">';
            signups.forEach(signup => {
                const avatarUrl = getDiscordAvatarUrl(signup.userId, signup.avatar);
                
                signupsList += `
                    <div class="d-flex align-items-center mb-2 p-2" style="background: rgba(212, 165, 116, 0.1); border-radius: 8px;">
                        <img src="${avatarUrl}" alt="${signup.username}" 
                             style="width: 32px; height: 32px; border-radius: 50%; margin-right: 8px;"
                             onerror="this.src='https://cdn.discordapp.com/embed/avatars/0.png'">
                        <div>
                            <div style="font-weight: bold; color: #D4A574;">${signup.username}</div>
                        </div>
                    </div>
                `;
            });
            signupsList += '</div>';
            
            return signupsList;
        }
        
        async function loadEventDetails(eventId) {
            try {
                const response = await fetch(`/api/events/${eventId}`);
                const event = await response.json();
                
                if (!response.ok) {
                    throw new Error(event.error || 'Failed to load event details');
                }
                
                const eventTypes = {
                    'spice-farming': { icon: '/icons/events/spice_large_edited.avif', name: 'Spice Farming', color: '#D4A574' },
                    'raiding-base': { icon: '⚔️', name: 'Raiding Base', color: '#B85450' },
                    'ore-stravidium': { icon: '/icons/events/StravidiumOre.avif', name: 'Stravidium Ore Mining', color: '#9370DB' },
                    'ore-titanium': { icon: '/icons/events/TitaniumOre.avif', name: 'Titanium Ore Mining', color: '#708090' },
                    'dd-extraction': { icon: '/icons/events/explorationpoint_x2.avif', name: 'DD Extraction Day', color: '#4169E1' }
                };
                
                const eventType = eventTypes[event.type];
                const startTime = new Date(event.startTime);
                
                // Handle icon display - check if it's an image path or emoji
                const iconDisplay = eventType.icon.startsWith('/') ? 
                    `<img src="${eventType.icon}" alt="${eventType.name}" style="width: 24px; height: 24px; object-fit: contain; margin-right: 8px;">` : 
                    `${eventType.icon} `;
                
                document.getElementById('eventModalTitle').innerHTML = 
                    `${iconDisplay}${event.title}`;
                
                document.getElementById('eventModalBody').innerHTML = `
                    <div class="row">
                        <div class="col-md-8">
                            <h6><i class="bi bi-calendar"></i> Event Details</h6>
                            <p><strong>Type:</strong> ${eventType.name}</p>
                            <p><strong>Date & Time:</strong> ${startTime.toLocaleString()} UTC</p>
                            ${event.maxParticipants ? `<p><strong>Max Participants:</strong> ${event.maxParticipants}</p>` : ''}
                            ${event.description ? `<p><strong>Description:</strong><br>${event.description}</p>` : ''}
                        </div>
                        <div class="col-md-4">
                            <h6><i class="bi bi-people"></i> Signups (${event.signupCount})</h6>
                            ${event.signupCount > 0 ? 
                                generateSignupsList(event.signups) : 
                                `<p class="text-muted">No signups yet.</p>`
                            }
                        </div>
                    </div>
                `;
                
                let footerButtons = '<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>';
                
                if (event.isSignedUp) {
                    footerButtons += `
                        <form method="POST" action="/events/${eventId}/remove-signup" class="d-inline">
                            <button type="submit" class="btn btn-warning">
                                <i class="bi bi-x-circle"></i> Remove Signup
                            </button>
                        </form>
                    `;
                } else if (new Date(event.startTime) > new Date()) {
                    footerButtons += `
                        <form method="POST" action="/events/${eventId}/signup" class="d-inline">
                            <button type="submit" class="btn btn-spice">
                                <i class="bi bi-check-circle"></i> Sign Up
                            </button>
                        </form>
                    `;
                }
                
                if (event.canManage) {
                    footerButtons += `
                        <a href="/events/${eventId}/edit" class="btn btn-outline-light">
                            <i class="bi bi-pencil"></i> Edit
                        </a>
                    `;
                }
                
                document.getElementById('eventModalFooter').innerHTML = footerButtons;
                
            } catch (error) {
                document.getElementById('eventModalBody').innerHTML = 
                    `<div class="alert alert-danger"><i class="bi bi-exclamation-triangle"></i> ${error.message}</div>`;
                document.getElementById('eventModalFooter').innerHTML = 
                    '<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>';
            }
        }
        
        <% if (canManageEvents) { %>
        // Admin-specific functions
        async function loadEventStats() {
            try {
                const response = await fetch('/api/events');
                const events = await response.json();
                
                console.log('Events response:', events, 'Type:', typeof events, 'IsArray:', Array.isArray(events));
                
                // Ensure events is an array
                if (!Array.isArray(events)) {
                    console.error('Events response is not an array:', events);
                    throw new Error('Events response is not an array');
                }
                
                const totalEvents = events.length;
                const currentMonth = new Date().getMonth() + 1;
                const currentYear = new Date().getFullYear();
                
                const monthEvents = events.filter(event => {
                    const eventDate = new Date(event.startTime);
                    return eventDate.getMonth() + 1 === currentMonth && 
                           eventDate.getFullYear() === currentYear;
                }).length;
                
                document.getElementById('totalEvents').textContent = totalEvents;
                document.getElementById('monthEvents').textContent = monthEvents;
            } catch (error) {
                console.error('Failed to load event stats:', error);
                document.getElementById('totalEvents').textContent = 'Error';
                document.getElementById('monthEvents').textContent = 'Error';
            }
        }
        
        function showEventStats() {
            fetch('/api/events')
                .then(response => response.json())
                .then(events => {
                    console.log('Events for stats:', events, 'Type:', typeof events, 'IsArray:', Array.isArray(events));
                    
                    // Ensure events is an array
                    if (!Array.isArray(events)) {
                        console.error('Events response is not an array:', events);
                        throw new Error('Events response is not an array');
                    }
                    
                    const stats = calculateEventStats(events);
                    showStatsModal(stats);
                })
                .catch(error => {
                    console.error('Failed to load event statistics:', error);
                    alert('Failed to load event statistics: ' + error.message);
                });
        }
        
        function calculateEventStats(events) {
            const now = new Date();
            const thisMonth = now.getMonth() + 1;
            const thisYear = now.getFullYear();
            
            const stats = {
                total: events.length,
                thisMonth: 0,
                upcoming: 0,
                past: 0,
                byType: {},
                totalSignups: 0,
                avgSignupsPerEvent: 0
            };
            
            events.forEach(event => {
                const eventDate = new Date(event.startTime);
                const isThisMonth = eventDate.getMonth() + 1 === thisMonth && 
                                  eventDate.getFullYear() === thisYear;
                
                if (isThisMonth) stats.thisMonth++;
                if (eventDate > now) stats.upcoming++;
                if (eventDate < now) stats.past++;
                
                // Count by type
                if (!stats.byType[event.type]) {
                    stats.byType[event.type] = 0;
                }
                stats.byType[event.type]++;
                
                // Count signups
                stats.totalSignups += event.signupCount || 0;
            });
            
            stats.avgSignupsPerEvent = stats.total > 0 ? 
                (stats.totalSignups / stats.total).toFixed(1) : 0;
            
            return stats;
        }
        
        function showStatsModal(stats) {
            const eventTypes = {
                'spice-farming': { icon: '/icons/events/spice_large_edited.avif', name: 'Spice Farming' },
                'raiding-base': { icon: '⚔️', name: 'Raiding Base' },
                'ore-stravidium': { icon: '/icons/events/StravidiumOre.avif', name: 'Stravidium Ore Mining' },
                'ore-titanium': { icon: '/icons/events/TitaniumOre.avif', name: 'Titanium Ore Mining' },
                'dd-extraction': { icon: '/icons/events/explorationpoint_x2.avif', name: 'DD Extraction Day' }
            };
            
            let typeBreakdown = '';
            for (const [type, count] of Object.entries(stats.byType)) {
                const typeInfo = eventTypes[type] || { icon: '📅', name: type };
                const iconDisplay = typeInfo.icon.startsWith('/') ? 
                    `<img src="${typeInfo.icon}" alt="${typeInfo.name}" style="width: 20px; height: 20px; object-fit: contain; margin-right: 8px;">` : 
                    `${typeInfo.icon} `;
                
                typeBreakdown += `
                    <div class="d-flex justify-content-between">
                        <span>${iconDisplay}${typeInfo.name}</span>
                        <span class="badge bg-secondary">${count}</span>
                    </div>
                `;
            }
            
            const modalHtml = `
                <div class="modal fade" id="statsModal" tabindex="-1">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header" style="background: linear-gradient(45deg, #D4A574, #CD853F); color: #654321;">
                                <h5 class="modal-title">
                                    <i class="bi bi-graph-up me-2"></i>
                                    Event Statistics
                                </h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                            </div>
                            <div class="modal-body">
                                <div class="row g-3">
                                    <div class="col-md-6">
                                        <div class="card">
                                            <div class="card-body text-center">
                                                <h2 class="text-primary">${stats.total}</h2>
                                                <small class="text-muted">Total Events</small>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="card">
                                            <div class="card-body text-center">
                                                <h2 class="text-warning">${stats.thisMonth}</h2>
                                                <small class="text-muted">This Month</small>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="card">
                                            <div class="card-body text-center">
                                                <h2 class="text-success">${stats.upcoming}</h2>
                                                <small class="text-muted">Upcoming</small>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="card">
                                            <div class="card-body text-center">
                                                <h2 class="text-info">${stats.totalSignups}</h2>
                                                <small class="text-muted">Total Signups</small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <hr>
                                
                                <h6>Events by Type</h6>
                                ${typeBreakdown}
                                
                                <hr>
                                
                                <div class="text-center">
                                    <p class="mb-0">
                                        <strong>Average signups per event:</strong> 
                                        <span class="text-primary">${stats.avgSignupsPerEvent}</span>
                                    </p>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>
            `;
            
            // Remove existing modal if present
            const existingModal = document.getElementById('statsModal');
            if (existingModal) {
                existingModal.remove();
            }
            
            // Add modal to page
            document.body.insertAdjacentHTML('beforeend', modalHtml);
            
            // Show modal
            const modal = new bootstrap.Modal(document.getElementById('statsModal'));
            modal.show();
        }
        
        // Load initial stats when page loads
        document.addEventListener('DOMContentLoaded', function() {
            loadEventStats();
        });
        <% } %>
    </script>
</body>
</html>
